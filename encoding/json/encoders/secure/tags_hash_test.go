package secure

type Hash struct {
	Default     string
	Blank       string  `json:""`
	Ignore      string  `json:"-"`
	Named       string  `json:"named"`
	Empty       string  `json:"empty"`
	Omit        string  `json:"omit,omitempty"`
	Number      int     `json:"number"`
	Float       float64 `json:"float"`
	HashDefault string
	HashBlank   string  `json:",hash"`
	HashIgnore  string  `json:"-"`
	HashNamed   string  `json:"named_hash,hash"`
	HashEmpty   string  `json:"empty_hash,hash"`
	HashOmit    string  `json:"omit_hash,omitempty,hash"`
	HashNumber  int     `json:"number_hash,hash"`
	HashFloat   float64 `json:"float_hash,hash"`
}

var hashObj = &Hash{
	Default:     "default-value",
	Blank:       "blank-value",
	Ignore:      "ignore-value",
	Named:       "named-value",
	Empty:       "",
	Number:      42,
	Float:       99.9,
	HashDefault: "default-hash",
	HashBlank:   "blank-hash",
	HashIgnore:  "ignore-hash",
	HashNamed:   "named-hash",
	HashEmpty:   "",
	HashNumber:  42,
	HashFloat:   99.9,
}

var hashDecoded = &Hash{
	Default:     "default-value",
	Blank:       "blank-value",
	Named:       "named-value",
	Number:      42,
	Float:       99.9,
	HashDefault: "default-hash",
	HashBlank:   "sha256:e05f57c166bef02522e61113b7cd05ccb7bec3319d974809cb83f015e5f07fd5",
	HashIgnore:  "",
	HashNamed:   "sha256:dea5cf8c7d3fa5c266b2bf3abfbf693f7546dd2642569a2120f3536d45a6b5ab",
	HashEmpty:   "",
	HashNumber:  42,
	HashFloat:   99.9,
}

var hashMap = map[string]interface{}{
	"Blank":       "blank-value",
	"Default":     "default-value",
	"HashBlank":   "sha256:e05f57c166bef02522e61113b7cd05ccb7bec3319d974809cb83f015e5f07fd5",
	"HashDefault": "default-hash",
	"empty":       "",
	"empty_hash":  "",
	"float":       99.9,
	"float_hash":  99.9,
	"named":       "named-value",
	"named_hash":  "sha256:dea5cf8c7d3fa5c266b2bf3abfbf693f7546dd2642569a2120f3536d45a6b5ab",
	"number":      42.0,
	"number_hash": 42.0,
}

var hashEncoded = []byte(`{"Default":"default-value","Blank":"blank-value","n` +
	`amed":"named-value","empty":"","number":42,"float":99.9,"HashDefault":"d` +
	`efault-hash","HashBlank":"sha256:e05f57c166bef02522e61113b7cd05ccb7bec33` +
	`19d974809cb83f015e5f07fd5","named_hash":"sha256:dea5cf8c7d3fa5c266b2bf3a` +
	`bfbf693f7546dd2642569a2120f3536d45a6b5ab","empty_hash":"","number_hash":` +
	`42,"float_hash":99.9}`)

var hashUnsealed = []byte(`{"Default":"default-value","Blank":"blank-value","` +
	`named":"named-value","empty":"","number":42,"float":99.9,"HashDefault":"` +
	`default-hash","HashBlank":"sha256:e05f57c166bef02522e61113b7cd05ccb7bec3` +
	`319d974809cb83f015e5f07fd5","named_hash":"sha256:dea5cf8c7d3fa5c266b2bf3` +
	`abfbf693f7546dd2642569a2120f3536d45a6b5ab","empty_hash":"","number_hash"` +
	`:42,"float_hash":99.9}`)

var hashSealed = []byte{0x6a, 0xff, 0x81, 0x3, 0x1, 0x1, 0x7, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x1, 0xff, 0x82, 0x0, 0x1, 0x7, 0x1, 0x7,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1, 0xc, 0x0, 0x1, 0x6, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x1, 0xc, 0x0, 0x1, 0xa, 0x43, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x1, 0x2, 0x0, 0x1, 0x9, 0x45,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x49, 0x44, 0x1, 0xc, 0x0, 0x1, 0x5,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1, 0xc, 0x0, 0x1, 0x6, 0x43, 0x69, 0x70,
	0x68, 0x65, 0x72, 0x1, 0xa, 0x0, 0x1, 0x7, 0x45, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x1, 0xa, 0x0, 0x0, 0x0, 0xfe, 0x2, 0xf0, 0xff, 0x82, 0x1, 0x5,
	0x30, 0x2e, 0x30, 0x2e, 0x31, 0x1, 0x6, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65,
	0x2, 0x8, 0x38, 0x36, 0x66, 0x62, 0x33, 0x66, 0x61, 0x30, 0x2, 0xfe, 0x2,
	0xd0, 0x37, 0x62, 0x32, 0x32, 0x34, 0x34, 0x36, 0x35, 0x36, 0x36, 0x36,
	0x31, 0x37, 0x35, 0x36, 0x63, 0x37, 0x34, 0x32, 0x32, 0x33, 0x61, 0x32,
	0x32, 0x36, 0x34, 0x36, 0x35, 0x36, 0x36, 0x36, 0x31, 0x37, 0x35, 0x36,
	0x63, 0x37, 0x34, 0x32, 0x64, 0x37, 0x36, 0x36, 0x31, 0x36, 0x63, 0x37,
	0x35, 0x36, 0x35, 0x32, 0x32, 0x32, 0x63, 0x32, 0x32, 0x34, 0x32, 0x36,
	0x63, 0x36, 0x31, 0x36, 0x65, 0x36, 0x62, 0x32, 0x32, 0x33, 0x61, 0x32,
	0x32, 0x36, 0x32, 0x36, 0x63, 0x36, 0x31, 0x36, 0x65, 0x36, 0x62, 0x32,
	0x64, 0x37, 0x36, 0x36, 0x31, 0x36, 0x63, 0x37, 0x35, 0x36, 0x35, 0x32,
	0x32, 0x32, 0x63, 0x32, 0x32, 0x36, 0x65, 0x36, 0x31, 0x36, 0x64, 0x36,
	0x35, 0x36, 0x34, 0x32, 0x32, 0x33, 0x61, 0x32, 0x32, 0x36, 0x65, 0x36,
	0x31, 0x36, 0x64, 0x36, 0x35, 0x36, 0x34, 0x32, 0x64, 0x37, 0x36, 0x36,
	0x31, 0x36, 0x63, 0x37, 0x35, 0x36, 0x35, 0x32, 0x32, 0x32, 0x63, 0x32,
	0x32, 0x36, 0x35, 0x36, 0x64, 0x37, 0x30, 0x37, 0x34, 0x37, 0x39, 0x32,
	0x32, 0x33, 0x61, 0x32, 0x32, 0x32, 0x32, 0x32, 0x63, 0x32, 0x32, 0x36,
	0x65, 0x37, 0x35, 0x36, 0x64, 0x36, 0x32, 0x36, 0x35, 0x37, 0x32, 0x32,
	0x32, 0x33, 0x61, 0x33, 0x34, 0x33, 0x32, 0x32, 0x63, 0x32, 0x32, 0x36,
	0x36, 0x36, 0x63, 0x36, 0x66, 0x36, 0x31, 0x37, 0x34, 0x32, 0x32, 0x33,
	0x61, 0x33, 0x39, 0x33, 0x39, 0x32, 0x65, 0x33, 0x39, 0x32, 0x63, 0x32,
	0x32, 0x34, 0x38, 0x36, 0x31, 0x37, 0x33, 0x36, 0x38, 0x34, 0x34, 0x36,
	0x35, 0x36, 0x36, 0x36, 0x31, 0x37, 0x35, 0x36, 0x63, 0x37, 0x34, 0x32,
	0x32, 0x33, 0x61, 0x32, 0x32, 0x36, 0x34, 0x36, 0x35, 0x36, 0x36, 0x36,
	0x31, 0x37, 0x35, 0x36, 0x63, 0x37, 0x34, 0x32, 0x64, 0x36, 0x38, 0x36,
	0x31, 0x37, 0x33, 0x36, 0x38, 0x32, 0x32, 0x32, 0x63, 0x32, 0x32, 0x34,
	0x38, 0x36, 0x31, 0x37, 0x33, 0x36, 0x38, 0x34, 0x32, 0x36, 0x63, 0x36,
	0x31, 0x36, 0x65, 0x36, 0x62, 0x32, 0x32, 0x33, 0x61, 0x32, 0x32, 0x37,
	0x33, 0x36, 0x38, 0x36, 0x31, 0x33, 0x32, 0x33, 0x35, 0x33, 0x36, 0x33,
	0x61, 0x36, 0x35, 0x33, 0x30, 0x33, 0x35, 0x36, 0x36, 0x33, 0x35, 0x33,
	0x37, 0x36, 0x33, 0x33, 0x31, 0x33, 0x36, 0x33, 0x36, 0x36, 0x32, 0x36,
	0x35, 0x36, 0x36, 0x33, 0x30, 0x33, 0x32, 0x33, 0x35, 0x33, 0x32, 0x33,
	0x32, 0x36, 0x35, 0x33, 0x36, 0x33, 0x31, 0x33, 0x31, 0x33, 0x31, 0x33,
	0x33, 0x36, 0x32, 0x33, 0x37, 0x36, 0x33, 0x36, 0x34, 0x33, 0x30, 0x33,
	0x35, 0x36, 0x33, 0x36, 0x33, 0x36, 0x32, 0x33, 0x37, 0x36, 0x32, 0x36,
	0x35, 0x36, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x31, 0x33, 0x39, 0x36,
	0x34, 0x33, 0x39, 0x33, 0x37, 0x33, 0x34, 0x33, 0x38, 0x33, 0x30, 0x33,
	0x39, 0x36, 0x33, 0x36, 0x32, 0x33, 0x38, 0x33, 0x33, 0x36, 0x36, 0x33,
	0x30, 0x33, 0x31, 0x33, 0x35, 0x36, 0x35, 0x33, 0x35, 0x36, 0x36, 0x33,
	0x30, 0x33, 0x37, 0x36, 0x36, 0x36, 0x34, 0x33, 0x35, 0x32, 0x32, 0x32,
	0x63, 0x32, 0x32, 0x36, 0x65, 0x36, 0x31, 0x36, 0x64, 0x36, 0x35, 0x36,
	0x34, 0x35, 0x66, 0x36, 0x38, 0x36, 0x31, 0x37, 0x33, 0x36, 0x38, 0x32,
	0x32, 0x33, 0x61, 0x32, 0x32, 0x37, 0x33, 0x36, 0x38, 0x36, 0x31, 0x33,
	0x32, 0x33, 0x35, 0x33, 0x36, 0x33, 0x61, 0x36, 0x34, 0x36, 0x35, 0x36,
	0x31, 0x33, 0x35, 0x36, 0x33, 0x36, 0x36, 0x33, 0x38, 0x36, 0x33, 0x33,
	0x37, 0x36, 0x34, 0x33, 0x33, 0x36, 0x36, 0x36, 0x31, 0x33, 0x35, 0x36,
	0x33, 0x33, 0x32, 0x33, 0x36, 0x33, 0x36, 0x36, 0x32, 0x33, 0x32, 0x36,
	0x32, 0x36, 0x36, 0x33, 0x33, 0x36, 0x31, 0x36, 0x32, 0x36, 0x36, 0x36,
	0x32, 0x36, 0x36, 0x33, 0x36, 0x33, 0x39, 0x33, 0x33, 0x36, 0x36, 0x33,
	0x37, 0x33, 0x35, 0x33, 0x34, 0x33, 0x36, 0x36, 0x34, 0x36, 0x34, 0x33,
	0x32, 0x33, 0x36, 0x33, 0x34, 0x33, 0x32, 0x33, 0x35, 0x33, 0x36, 0x33,
	0x39, 0x36, 0x31, 0x33, 0x32, 0x33, 0x31, 0x33, 0x32, 0x33, 0x30, 0x36,
	0x36, 0x33, 0x33, 0x33, 0x35, 0x33, 0x33, 0x33, 0x36, 0x36, 0x34, 0x33,
	0x34, 0x33, 0x35, 0x36, 0x31, 0x33, 0x36, 0x36, 0x32, 0x33, 0x35, 0x36,
	0x31, 0x36, 0x32, 0x32, 0x32, 0x32, 0x63, 0x32, 0x32, 0x36, 0x35, 0x36,
	0x64, 0x37, 0x30, 0x37, 0x34, 0x37, 0x39, 0x35, 0x66, 0x36, 0x38, 0x36,
	0x31, 0x37, 0x33, 0x36, 0x38, 0x32, 0x32, 0x33, 0x61, 0x32, 0x32, 0x32,
	0x32, 0x32, 0x63, 0x32, 0x32, 0x36, 0x65, 0x37, 0x35, 0x36, 0x64, 0x36,
	0x32, 0x36, 0x35, 0x37, 0x32, 0x35, 0x66, 0x36, 0x38, 0x36, 0x31, 0x37,
	0x33, 0x36, 0x38, 0x32, 0x32, 0x33, 0x61, 0x33, 0x34, 0x33, 0x32, 0x32,
	0x63, 0x32, 0x32, 0x36, 0x36, 0x36, 0x63, 0x36, 0x66, 0x36, 0x31, 0x37,
	0x34, 0x35, 0x66, 0x36, 0x38, 0x36, 0x31, 0x37, 0x33, 0x36, 0x38, 0x32,
	0x32, 0x33, 0x61, 0x33, 0x39, 0x33, 0x39, 0x32, 0x65, 0x33, 0x39, 0x37,
	0x64, 0x0}

var hashComp = []byte{0x6a, 0xff, 0x81, 0x3, 0x1, 0x1, 0x7, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x1, 0xff, 0x82, 0x0, 0x1, 0x7, 0x1, 0x7,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1, 0xc, 0x0, 0x1, 0x6, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x1, 0xc, 0x0, 0x1, 0xa, 0x43, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x1, 0x2, 0x0, 0x1, 0x9, 0x45,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x49, 0x44, 0x1, 0xc, 0x0, 0x1, 0x5,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1, 0xc, 0x0, 0x1, 0x6, 0x43, 0x69, 0x70,
	0x68, 0x65, 0x72, 0x1, 0xa, 0x0, 0x1, 0x7, 0x45, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x1, 0xa, 0x0, 0x0, 0x0, 0xfe, 0x1, 0xee, 0xff, 0x82, 0x1, 0x5,
	0x30, 0x2e, 0x30, 0x2e, 0x31, 0x1, 0x6, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65,
	0x1, 0x1, 0x1, 0x8, 0x38, 0x36, 0x66, 0x62, 0x33, 0x66, 0x61, 0x30, 0x2,
	0xfe, 0x1, 0xcc, 0x32, 0x38, 0x62, 0x35, 0x32, 0x66, 0x66, 0x64, 0x34,
	0x34, 0x30, 0x30, 0x36, 0x38, 0x30, 0x30, 0x62, 0x64, 0x30, 0x36, 0x30,
	0x30, 0x36, 0x32, 0x38, 0x65, 0x32, 0x61, 0x31, 0x64, 0x36, 0x30, 0x30,
	0x39, 0x64, 0x63, 0x62, 0x33, 0x38, 0x64, 0x38, 0x32, 0x36, 0x61, 0x35,
	0x61, 0x61, 0x34, 0x39, 0x61, 0x34, 0x38, 0x32, 0x65, 0x38, 0x39, 0x64,
	0x36, 0x63, 0x30, 0x36, 0x35, 0x62, 0x35, 0x34, 0x30, 0x65, 0x39, 0x38,
	0x64, 0x64, 0x38, 0x63, 0x61, 0x63, 0x64, 0x61, 0x37, 0x64, 0x34, 0x39,
	0x32, 0x32, 0x34, 0x30, 0x31, 0x30, 0x65, 0x30, 0x62, 0x36, 0x62, 0x64,
	0x38, 0x36, 0x64, 0x63, 0x65, 0x35, 0x36, 0x63, 0x65, 0x61, 0x32, 0x36,
	0x39, 0x63, 0x61, 0x66, 0x34, 0x30, 0x37, 0x31, 0x31, 0x66, 0x32, 0x36,
	0x61, 0x36, 0x32, 0x61, 0x31, 0x64, 0x38, 0x39, 0x61, 0x31, 0x36, 0x61,
	0x39, 0x33, 0x65, 0x61, 0x64, 0x37, 0x65, 0x37, 0x66, 0x37, 0x33, 0x66,
	0x61, 0x63, 0x36, 0x35, 0x36, 0x34, 0x35, 0x39, 0x36, 0x66, 0x63, 0x61,
	0x39, 0x32, 0x39, 0x36, 0x36, 0x33, 0x63, 0x34, 0x62, 0x66, 0x36, 0x34,
	0x36, 0x34, 0x30, 0x35, 0x63, 0x62, 0x36, 0x35, 0x37, 0x65, 0x37, 0x64,
	0x33, 0x31, 0x33, 0x39, 0x64, 0x34, 0x66, 0x34, 0x36, 0x62, 0x33, 0x33,
	0x64, 0x34, 0x36, 0x61, 0x31, 0x62, 0x36, 0x32, 0x64, 0x34, 0x61, 0x38,
	0x39, 0x37, 0x39, 0x61, 0x62, 0x36, 0x36, 0x32, 0x63, 0x34, 0x66, 0x36,
	0x33, 0x61, 0x61, 0x31, 0x33, 0x34, 0x32, 0x34, 0x38, 0x31, 0x64, 0x33,
	0x31, 0x66, 0x31, 0x62, 0x63, 0x62, 0x37, 0x32, 0x61, 0x36, 0x32, 0x32,
	0x61, 0x33, 0x66, 0x38, 0x66, 0x32, 0x66, 0x34, 0x64, 0x65, 0x34, 0x36,
	0x33, 0x62, 0x39, 0x36, 0x33, 0x65, 0x31, 0x65, 0x33, 0x35, 0x38, 0x37,
	0x38, 0x65, 0x30, 0x38, 0x38, 0x33, 0x35, 0x65, 0x63, 0x61, 0x65, 0x36,
	0x33, 0x62, 0x38, 0x30, 0x30, 0x66, 0x39, 0x32, 0x33, 0x62, 0x30, 0x35,
	0x38, 0x37, 0x37, 0x65, 0x30, 0x39, 0x64, 0x33, 0x34, 0x63, 0x61, 0x31,
	0x31, 0x37, 0x37, 0x65, 0x62, 0x31, 0x32, 0x31, 0x38, 0x38, 0x33, 0x63,
	0x34, 0x64, 0x37, 0x33, 0x35, 0x34, 0x66, 0x35, 0x38, 0x33, 0x39, 0x32,
	0x38, 0x38, 0x63, 0x66, 0x34, 0x61, 0x64, 0x33, 0x62, 0x32, 0x38, 0x38,
	0x63, 0x30, 0x34, 0x31, 0x63, 0x37, 0x31, 0x64, 0x65, 0x32, 0x30, 0x38,
	0x63, 0x30, 0x30, 0x64, 0x30, 0x36, 0x65, 0x31, 0x64, 0x38, 0x33, 0x33,
	0x34, 0x66, 0x63, 0x32, 0x65, 0x37, 0x30, 0x30, 0x61, 0x30, 0x31, 0x31,
	0x30, 0x30, 0x30, 0x33, 0x33, 0x31, 0x39, 0x66, 0x36, 0x61, 0x66, 0x30,
	0x30, 0x34, 0x64, 0x30, 0x36, 0x66, 0x62, 0x32, 0x62, 0x30, 0x30, 0x30,
	0x34, 0x38, 0x30, 0x62, 0x38, 0x31, 0x31, 0x64, 0x33, 0x61, 0x32, 0x63,
	0x63, 0x38, 0x63, 0x63, 0x62, 0x31, 0x32, 0x39, 0x34, 0x38, 0x64, 0x61,
	0x30, 0x30, 0x33, 0x30, 0x39, 0x34, 0x30, 0x30, 0x37, 0x38, 0x64, 0x33,
	0x38, 0x66, 0x38, 0x30, 0x32, 0x63, 0x35, 0x61, 0x65, 0x30, 0x63, 0x32,
	0x33, 0x36, 0x37, 0x36, 0x39, 0x33, 0x61, 0x39, 0x34, 0x32, 0x66, 0x31,
	0x65, 0x33, 0x64, 0x61, 0x30, 0x66, 0x30, 0x0}
