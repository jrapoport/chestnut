package secure

type Both struct {
	Default          string
	Blank            string  `json:""`
	Ignore           string  `json:"-"`
	Named            string  `json:"named"`
	Empty            string  `json:"empty"`
	Omit             string  `json:"omit,omitempty"`
	Number           int     `json:"number"`
	Float            float64 `json:"float"`
	SecureDefault    string  `json:",secure"`
	SecureBlank      string  `json:",secure"`
	SecureIgnore     string  `json:"-"`
	SecureNamed      string  `json:"named_secure,secure"`
	SecureEmpty      string  `json:"empty_secure,secure"`
	SecureOmit       string  `json:"omit_secure,omitempty,secure"`
	SecureNumber     int     `json:"number_secure,secure"`
	SecureFloat      float64 `json:"float_secure,secure"`
	HashBlank        string  `json:",hash"`
	HashIgnore       string  `json:"-"`
	HashNamed        string  `json:"named_hash,hash"`
	HashEmpty        string  `json:"empty_hash,hash"`
	HashOmit         string  `json:"omit_hash,omitempty,hash"`
	HashNumber       int     `json:"number_hash,hash"`
	HashFloat        float64 `json:"float_hash,hash"`
	SecureHashBlank  string  `json:",hash,secure"`
	SecureHashIgnore string  `json:"-"`
	SecureHashNamed  string  `json:"named_secure_hash,hash,secure"`
	SecureHashEmpty  string  `json:"empty_secure_hash,hash,secure"`
	SecureHashOmit   string  `json:"omit_secure_hash,omitempty,hash,secure"`
	SecureHashNumber int     `json:"number_secure_hash,hash,secure"`
	SecureHashFloat  float64 `json:"float_secure_hash,hash,secure"`
}

var bothObj = &Both{
	Default:          "default-value",
	Blank:            "blank-value",
	Ignore:           "ignore-value",
	Named:            "named-value",
	Empty:            "",
	Number:           42,
	Float:            99.9,
	SecureDefault:    "default-secure",
	SecureBlank:      "blank-secure",
	SecureIgnore:     "ignore-secure",
	SecureNamed:      "named-secure",
	SecureEmpty:      "",
	SecureNumber:     42,
	SecureFloat:      99.9,
	HashBlank:        "blank-hash",
	HashIgnore:       "ignore-hash",
	HashNamed:        "named-hash",
	HashEmpty:        "",
	HashNumber:       42,
	HashFloat:        99.9,
	SecureHashBlank:  "default-secure",
	SecureHashIgnore: "blank-secure",
	SecureHashNamed:  "ignore-secure",
	SecureHashEmpty:  "named-secure",
	SecureHashOmit:   "",
	SecureHashNumber: 42,
	SecureHashFloat:  99.9,
}

var bothDecoded = &Both{
	Default:          "default-value",
	Blank:            "blank-value",
	Named:            "named-value",
	Number:           42,
	Float:            99.9,
	SecureDefault:    "default-secure",
	SecureBlank:      "blank-secure",
	SecureNamed:      "named-secure",
	SecureNumber:     42,
	SecureFloat:      99.9,
	HashBlank:        "sha256:e05f57c166bef02522e61113b7cd05ccb7bec3319d974809cb83f015e5f07fd5",
	HashNamed:        "sha256:dea5cf8c7d3fa5c266b2bf3abfbf693f7546dd2642569a2120f3536d45a6b5ab",
	HashNumber:       42,
	HashFloat:        99.9,
	SecureHashBlank:  "sha256:17a7db5b0cbd2ff792e539056c31d5873d7cf0eb209e37759c19e4966c7a82bb",
	SecureHashNamed:  "sha256:4741a740326a7347549ebbfc0569bd9e20df19a6fb9e953ccf8294afb7c7a022",
	SecureHashEmpty:  "sha256:69a192d76548512a2624cd2c62e7592cdf6ade4b9a384e71018d865012692dad",
	SecureHashNumber: 42,
	SecureHashFloat:  99.9,
}

var bothSparse = &Both{
	Default:    "default-value",
	Blank:      "blank-value",
	Named:      "named-value",
	Number:     42,
	Float:      99.9,
	HashBlank:  "sha256:e05f57c166bef02522e61113b7cd05ccb7bec3319d974809cb83f015e5f07fd5",
	HashNamed:  "sha256:dea5cf8c7d3fa5c266b2bf3abfbf693f7546dd2642569a2120f3536d45a6b5ab",
	HashNumber: 42,
	HashFloat:  99.9,
}

var bothMap = map[string]interface{}{
	"Blank":              "blank-value",
	"Default":            "default-value",
	"HashBlank":          "sha256:e05f57c166bef02522e61113b7cd05ccb7bec3319d974809cb83f015e5f07fd5",
	"SecureBlank":        "blank-secure",
	"SecureDefault":      "default-secure",
	"SecureHashBlank":    "sha256:17a7db5b0cbd2ff792e539056c31d5873d7cf0eb209e37759c19e4966c7a82bb",
	"empty":              "",
	"empty_hash":         "",
	"empty_secure":       "",
	"empty_secure_hash":  "sha256:69a192d76548512a2624cd2c62e7592cdf6ade4b9a384e71018d865012692dad",
	"float":              99.9,
	"float_hash":         99.9,
	"float_secure":       99.9,
	"float_secure_hash":  99.9,
	"named":              "named-value",
	"named_hash":         "sha256:dea5cf8c7d3fa5c266b2bf3abfbf693f7546dd2642569a2120f3536d45a6b5ab",
	"named_secure":       "named-secure",
	"named_secure_hash":  "sha256:4741a740326a7347549ebbfc0569bd9e20df19a6fb9e953ccf8294afb7c7a022",
	"number":             42.0,
	"number_hash":        42.0,
	"number_secure":      42.0,
	"number_secure_hash": 42.0,
}

var bothMapSparse = map[string]interface{}{
	"Blank":              "blank-value",
	"Default":            "default-value",
	"HashBlank":          "sha256:e05f57c166bef02522e61113b7cd05ccb7bec3319d974809cb83f015e5f07fd5",
	"SecureBlank":        "",
	"SecureDefault":      "",
	"SecureHashBlank":    "",
	"empty":              "",
	"empty_hash":         "",
	"empty_secure":       "",
	"empty_secure_hash":  "",
	"float":              99.9,
	"float_hash":         99.9,
	"float_secure":       0.0,
	"float_secure_hash":  0.0,
	"named":              "named-value",
	"named_hash":         "sha256:dea5cf8c7d3fa5c266b2bf3abfbf693f7546dd2642569a2120f3536d45a6b5ab",
	"named_secure":       "",
	"named_secure_hash":  "",
	"number":             42.0,
	"number_hash":        42.0,
	"number_secure":      0.0,
	"number_secure_hash": 0.0,
}

var bothEncoded = []byte(`{"Default":"default-value","Blank":"blank-value","n` +
	`amed":"named-value","empty":"","number":42,"float":99.9,"SecureDefault":` +
	`"cn86fb3fa00_24","SecureBlank":"cn86fb3fa01_24","named_secure":"cn86fb3f` +
	`a02_24","empty_secure":"cn86fb3fa03_24","number_secure":"cn86fb3fa04_2",` +
	`"float_secure":"cn86fb3fa05_14","HashBlank":"sha256:e05f57c166bef02522e6` +
	`1113b7cd05ccb7bec3319d974809cb83f015e5f07fd5","named_hash":"sha256:dea5c` +
	`f8c7d3fa5c266b2bf3abfbf693f7546dd2642569a2120f3536d45a6b5ab","empty_hash` +
	`":"","number_hash":42,"float_hash":99.9,"SecureHashBlank":"cn86fb3fa06_2` +
	`4","named_secure_hash":"cn86fb3fa07_24","empty_secure_hash":"cn86fb3fa08` +
	`_24","number_secure_hash":"cn86fb3fa09_2","float_secure_hash":"cn86fb3fa` +
	`010_14"}`)

var bothUnsealed = []byte(`{"Default":"default-value","Blank":"blank-value","` +
	`named":"named-value","empty":"","number":42,"float":99.9,"SecureDefault"` +
	`:"cn86fb3fa00_24","SecureBlank":"cn86fb3fa01_24","named_secure":"cn86fb3` +
	`fa02_24","empty_secure":"cn86fb3fa03_24","number_secure":"cn86fb3fa04_2"` +
	`,"float_secure":"cn86fb3fa05_14","HashBlank":"sha256:e05f57c166bef02522e` +
	`61113b7cd05ccb7bec3319d974809cb83f015e5f07fd5","named_hash":"sha256:dea5` +
	`cf8c7d3fa5c266b2bf3abfbf693f7546dd2642569a2120f3536d45a6b5ab","empty_has` +
	`h":"","number_hash":42,"float_hash":99.9,"SecureHashBlank":"cn86fb3fa06_` +
	`24","named_secure_hash":"cn86fb3fa07_24","empty_secure_hash":"cn86fb3fa0` +
	`8_24","number_secure_hash":"cn86fb3fa09_2","float_secure_hash":"cn86fb3f` +
	`a010_14"}`)

var bothSealed = []byte{0x69, 0x7f, 0x3, 0x1, 0x1, 0x7, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x1, 0xff, 0x80, 0x0, 0x1, 0x7, 0x1, 0x7, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1, 0xc, 0x0, 0x1, 0x6, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x1, 0xc, 0x0, 0x1, 0xa, 0x43, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x1, 0x2, 0x0, 0x1, 0x9, 0x45, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x72, 0x49, 0x44, 0x1, 0xc, 0x0, 0x1, 0x5, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x1, 0xc, 0x0, 0x1, 0x6, 0x43, 0x69, 0x70, 0x68, 0x65,
	0x72, 0x1, 0xa, 0x0, 0x1, 0x7, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64,
	0x1, 0xa, 0x0, 0x0, 0x0, 0xfe, 0x6, 0xa9, 0xff, 0x80, 0x1, 0x5, 0x30, 0x2e,
	0x30, 0x2e, 0x31, 0x1, 0x6, 0x73, 0x70, 0x61, 0x72, 0x73, 0x65, 0x2, 0x8,
	0x38, 0x36, 0x66, 0x62, 0x33, 0x66, 0x61, 0x30, 0x1, 0xa, 0x63, 0x6e, 0x38,
	0x36, 0x66, 0x62, 0x33, 0x66, 0x61, 0x30, 0x1, 0xfe, 0x3, 0xb6, 0x37, 0x62,
	0x32, 0x32, 0x36, 0x33, 0x36, 0x65, 0x33, 0x38, 0x33, 0x36, 0x36, 0x36,
	0x36, 0x32, 0x33, 0x33, 0x36, 0x36, 0x36, 0x31, 0x33, 0x30, 0x33, 0x30,
	0x35, 0x66, 0x33, 0x32, 0x33, 0x34, 0x32, 0x32, 0x33, 0x61, 0x32, 0x32,
	0x36, 0x34, 0x36, 0x35, 0x36, 0x36, 0x36, 0x31, 0x37, 0x35, 0x36, 0x63,
	0x37, 0x34, 0x32, 0x64, 0x37, 0x33, 0x36, 0x35, 0x36, 0x33, 0x37, 0x35,
	0x37, 0x32, 0x36, 0x35, 0x32, 0x32, 0x32, 0x63, 0x32, 0x32, 0x36, 0x33,
	0x36, 0x65, 0x33, 0x38, 0x33, 0x36, 0x36, 0x36, 0x36, 0x32, 0x33, 0x33,
	0x36, 0x36, 0x36, 0x31, 0x33, 0x30, 0x33, 0x31, 0x35, 0x66, 0x33, 0x32,
	0x33, 0x34, 0x32, 0x32, 0x33, 0x61, 0x32, 0x32, 0x36, 0x32, 0x36, 0x63,
	0x36, 0x31, 0x36, 0x65, 0x36, 0x62, 0x32, 0x64, 0x37, 0x33, 0x36, 0x35,
	0x36, 0x33, 0x37, 0x35, 0x37, 0x32, 0x36, 0x35, 0x32, 0x32, 0x32, 0x63,
	0x32, 0x32, 0x36, 0x33, 0x36, 0x65, 0x33, 0x38, 0x33, 0x36, 0x36, 0x36,
	0x36, 0x32, 0x33, 0x33, 0x36, 0x36, 0x36, 0x31, 0x33, 0x30, 0x33, 0x32,
	0x35, 0x66, 0x33, 0x32, 0x33, 0x34, 0x32, 0x32, 0x33, 0x61, 0x32, 0x32,
	0x36, 0x65, 0x36, 0x31, 0x36, 0x64, 0x36, 0x35, 0x36, 0x34, 0x32, 0x64,
	0x37, 0x33, 0x36, 0x35, 0x36, 0x33, 0x37, 0x35, 0x37, 0x32, 0x36, 0x35,
	0x32, 0x32, 0x32, 0x63, 0x32, 0x32, 0x36, 0x33, 0x36, 0x65, 0x33, 0x38,
	0x33, 0x36, 0x36, 0x36, 0x36, 0x32, 0x33, 0x33, 0x36, 0x36, 0x36, 0x31,
	0x33, 0x30, 0x33, 0x33, 0x35, 0x66, 0x33, 0x32, 0x33, 0x34, 0x32, 0x32,
	0x33, 0x61, 0x32, 0x32, 0x32, 0x32, 0x32, 0x63, 0x32, 0x32, 0x36, 0x33,
	0x36, 0x65, 0x33, 0x38, 0x33, 0x36, 0x36, 0x36, 0x36, 0x32, 0x33, 0x33,
	0x36, 0x36, 0x36, 0x31, 0x33, 0x30, 0x33, 0x34, 0x35, 0x66, 0x33, 0x32,
	0x32, 0x32, 0x33, 0x61, 0x33, 0x34, 0x33, 0x32, 0x32, 0x63, 0x32, 0x32,
	0x36, 0x33, 0x36, 0x65, 0x33, 0x38, 0x33, 0x36, 0x36, 0x36, 0x36, 0x32,
	0x33, 0x33, 0x36, 0x36, 0x36, 0x31, 0x33, 0x30, 0x33, 0x35, 0x35, 0x66,
	0x33, 0x31, 0x33, 0x34, 0x32, 0x32, 0x33, 0x61, 0x33, 0x39, 0x33, 0x39,
	0x32, 0x65, 0x33, 0x39, 0x32, 0x63, 0x32, 0x32, 0x36, 0x33, 0x36, 0x65,
	0x33, 0x38, 0x33, 0x36, 0x36, 0x36, 0x36, 0x32, 0x33, 0x33, 0x36, 0x36,
	0x36, 0x31, 0x33, 0x30, 0x33, 0x36, 0x35, 0x66, 0x33, 0x32, 0x33, 0x34,
	0x32, 0x32, 0x33, 0x61, 0x32, 0x32, 0x37, 0x33, 0x36, 0x38, 0x36, 0x31,
	0x33, 0x32, 0x33, 0x35, 0x33, 0x36, 0x33, 0x61, 0x33, 0x31, 0x33, 0x37,
	0x36, 0x31, 0x33, 0x37, 0x36, 0x34, 0x36, 0x32, 0x33, 0x35, 0x36, 0x32,
	0x33, 0x30, 0x36, 0x33, 0x36, 0x32, 0x36, 0x34, 0x33, 0x32, 0x36, 0x36,
	0x36, 0x36, 0x33, 0x37, 0x33, 0x39, 0x33, 0x32, 0x36, 0x35, 0x33, 0x35,
	0x33, 0x33, 0x33, 0x39, 0x33, 0x30, 0x33, 0x35, 0x33, 0x36, 0x36, 0x33,
	0x33, 0x33, 0x33, 0x31, 0x36, 0x34, 0x33, 0x35, 0x33, 0x38, 0x33, 0x37,
	0x33, 0x33, 0x36, 0x34, 0x33, 0x37, 0x36, 0x33, 0x36, 0x36, 0x33, 0x30,
	0x36, 0x35, 0x36, 0x32, 0x33, 0x32, 0x33, 0x30, 0x33, 0x39, 0x36, 0x35,
	0x33, 0x33, 0x33, 0x37, 0x33, 0x37, 0x33, 0x35, 0x33, 0x39, 0x36, 0x33,
	0x33, 0x31, 0x33, 0x39, 0x36, 0x35, 0x33, 0x34, 0x33, 0x39, 0x33, 0x36,
	0x33, 0x36, 0x36, 0x33, 0x33, 0x37, 0x36, 0x31, 0x33, 0x38, 0x33, 0x32,
	0x36, 0x32, 0x36, 0x32, 0x32, 0x32, 0x32, 0x63, 0x32, 0x32, 0x36, 0x33,
	0x36, 0x65, 0x33, 0x38, 0x33, 0x36, 0x36, 0x36, 0x36, 0x32, 0x33, 0x33,
	0x36, 0x36, 0x36, 0x31, 0x33, 0x30, 0x33, 0x37, 0x35, 0x66, 0x33, 0x32,
	0x33, 0x34, 0x32, 0x32, 0x33, 0x61, 0x32, 0x32, 0x37, 0x33, 0x36, 0x38,
	0x36, 0x31, 0x33, 0x32, 0x33, 0x35, 0x33, 0x36, 0x33, 0x61, 0x33, 0x34,
	0x33, 0x37, 0x33, 0x34, 0x33, 0x31, 0x36, 0x31, 0x33, 0x37, 0x33, 0x34,
	0x33, 0x30, 0x33, 0x33, 0x33, 0x32, 0x33, 0x36, 0x36, 0x31, 0x33, 0x37,
	0x33, 0x33, 0x33, 0x34, 0x33, 0x37, 0x33, 0x35, 0x33, 0x34, 0x33, 0x39,
	0x36, 0x35, 0x36, 0x32, 0x36, 0x32, 0x36, 0x36, 0x36, 0x33, 0x33, 0x30,
	0x33, 0x35, 0x33, 0x36, 0x33, 0x39, 0x36, 0x32, 0x36, 0x34, 0x33, 0x39,
	0x36, 0x35, 0x33, 0x32, 0x33, 0x30, 0x36, 0x34, 0x36, 0x36, 0x33, 0x31,
	0x33, 0x39, 0x36, 0x31, 0x33, 0x36, 0x36, 0x36, 0x36, 0x32, 0x33, 0x39,
	0x36, 0x35, 0x33, 0x39, 0x33, 0x35, 0x33, 0x33, 0x36, 0x33, 0x36, 0x33,
	0x36, 0x36, 0x33, 0x38, 0x33, 0x32, 0x33, 0x39, 0x33, 0x34, 0x36, 0x31,
	0x36, 0x36, 0x36, 0x32, 0x33, 0x37, 0x36, 0x33, 0x33, 0x37, 0x36, 0x31,
	0x33, 0x30, 0x33, 0x32, 0x33, 0x32, 0x32, 0x32, 0x32, 0x63, 0x32, 0x32,
	0x36, 0x33, 0x36, 0x65, 0x33, 0x38, 0x33, 0x36, 0x36, 0x36, 0x36, 0x32,
	0x33, 0x33, 0x36, 0x36, 0x36, 0x31, 0x33, 0x30, 0x33, 0x38, 0x35, 0x66,
	0x33, 0x32, 0x33, 0x34, 0x32, 0x32, 0x33, 0x61, 0x32, 0x32, 0x37, 0x33,
	0x36, 0x38, 0x36, 0x31, 0x33, 0x32, 0x33, 0x35, 0x33, 0x36, 0x33, 0x61,
	0x33, 0x36, 0x33, 0x39, 0x36, 0x31, 0x33, 0x31, 0x33, 0x39, 0x33, 0x32,
	0x36, 0x34, 0x33, 0x37, 0x33, 0x36, 0x33, 0x35, 0x33, 0x34, 0x33, 0x38,
	0x33, 0x35, 0x33, 0x31, 0x33, 0x32, 0x36, 0x31, 0x33, 0x32, 0x33, 0x36,
	0x33, 0x32, 0x33, 0x34, 0x36, 0x33, 0x36, 0x34, 0x33, 0x32, 0x36, 0x33,
	0x33, 0x36, 0x33, 0x32, 0x36, 0x35, 0x33, 0x37, 0x33, 0x35, 0x33, 0x39,
	0x33, 0x32, 0x36, 0x33, 0x36, 0x34, 0x36, 0x36, 0x33, 0x36, 0x36, 0x31,
	0x36, 0x34, 0x36, 0x35, 0x33, 0x34, 0x36, 0x32, 0x33, 0x39, 0x36, 0x31,
	0x33, 0x33, 0x33, 0x38, 0x33, 0x34, 0x36, 0x35, 0x33, 0x37, 0x33, 0x31,
	0x33, 0x30, 0x33, 0x31, 0x33, 0x38, 0x36, 0x34, 0x33, 0x38, 0x33, 0x36,
	0x33, 0x35, 0x33, 0x30, 0x33, 0x31, 0x33, 0x32, 0x33, 0x36, 0x33, 0x39,
	0x33, 0x32, 0x36, 0x34, 0x36, 0x31, 0x36, 0x34, 0x32, 0x32, 0x32, 0x63,
	0x32, 0x32, 0x36, 0x33, 0x36, 0x65, 0x33, 0x38, 0x33, 0x36, 0x36, 0x36,
	0x36, 0x32, 0x33, 0x33, 0x36, 0x36, 0x36, 0x31, 0x33, 0x30, 0x33, 0x39,
	0x35, 0x66, 0x33, 0x32, 0x32, 0x32, 0x33, 0x61, 0x33, 0x34, 0x33, 0x32,
	0x32, 0x63, 0x32, 0x32, 0x36, 0x33, 0x36, 0x65, 0x33, 0x38, 0x33, 0x36,
	0x36, 0x36, 0x36, 0x32, 0x33, 0x33, 0x36, 0x36, 0x36, 0x31, 0x33, 0x30,
	0x33, 0x31, 0x33, 0x30, 0x35, 0x66, 0x33, 0x31, 0x33, 0x34, 0x32, 0x32,
	0x33, 0x61, 0x33, 0x39, 0x33, 0x39, 0x32, 0x65, 0x33, 0x39, 0x37, 0x64,
	0x1, 0xfe, 0x2, 0xc3, 0x7b, 0x22, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x22, 0x3a, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2d, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x22, 0x42, 0x6c, 0x61, 0x6e, 0x6b,
	0x22, 0x3a, 0x22, 0x62, 0x6c, 0x61, 0x6e, 0x6b, 0x2d, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x2c, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x22, 0x3a,
	0x22, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x2d, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x2c, 0x22, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3a, 0x22, 0x22,
	0x2c, 0x22, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x3a, 0x34, 0x32,
	0x2c, 0x22, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x22, 0x3a, 0x39, 0x39, 0x2e,
	0x39, 0x2c, 0x22, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x22, 0x63, 0x6e, 0x38, 0x36, 0x66,
	0x62, 0x33, 0x66, 0x61, 0x30, 0x30, 0x5f, 0x32, 0x34, 0x22, 0x2c, 0x22,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x42, 0x6c, 0x61, 0x6e, 0x6b, 0x22,
	0x3a, 0x22, 0x63, 0x6e, 0x38, 0x36, 0x66, 0x62, 0x33, 0x66, 0x61, 0x30,
	0x31, 0x5f, 0x32, 0x34, 0x22, 0x2c, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x64,
	0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x22, 0x3a, 0x22, 0x63, 0x6e,
	0x38, 0x36, 0x66, 0x62, 0x33, 0x66, 0x61, 0x30, 0x32, 0x5f, 0x32, 0x34,
	0x22, 0x2c, 0x22, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x65, 0x22, 0x3a, 0x22, 0x63, 0x6e, 0x38, 0x36, 0x66, 0x62,
	0x33, 0x66, 0x61, 0x30, 0x33, 0x5f, 0x32, 0x34, 0x22, 0x2c, 0x22, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65,
	0x22, 0x3a, 0x22, 0x63, 0x6e, 0x38, 0x36, 0x66, 0x62, 0x33, 0x66, 0x61,
	0x30, 0x34, 0x5f, 0x32, 0x22, 0x2c, 0x22, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x22, 0x3a, 0x22, 0x63, 0x6e,
	0x38, 0x36, 0x66, 0x62, 0x33, 0x66, 0x61, 0x30, 0x35, 0x5f, 0x31, 0x34,
	0x22, 0x2c, 0x22, 0x48, 0x61, 0x73, 0x68, 0x42, 0x6c, 0x61, 0x6e, 0x6b,
	0x22, 0x3a, 0x22, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x3a, 0x65, 0x30,
	0x35, 0x66, 0x35, 0x37, 0x63, 0x31, 0x36, 0x36, 0x62, 0x65, 0x66, 0x30,
	0x32, 0x35, 0x32, 0x32, 0x65, 0x36, 0x31, 0x31, 0x31, 0x33, 0x62, 0x37,
	0x63, 0x64, 0x30, 0x35, 0x63, 0x63, 0x62, 0x37, 0x62, 0x65, 0x63, 0x33,
	0x33, 0x31, 0x39, 0x64, 0x39, 0x37, 0x34, 0x38, 0x30, 0x39, 0x63, 0x62,
	0x38, 0x33, 0x66, 0x30, 0x31, 0x35, 0x65, 0x35, 0x66, 0x30, 0x37, 0x66,
	0x64, 0x35, 0x22, 0x2c, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x22, 0x3a, 0x22, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36,
	0x3a, 0x64, 0x65, 0x61, 0x35, 0x63, 0x66, 0x38, 0x63, 0x37, 0x64, 0x33,
	0x66, 0x61, 0x35, 0x63, 0x32, 0x36, 0x36, 0x62, 0x32, 0x62, 0x66, 0x33,
	0x61, 0x62, 0x66, 0x62, 0x66, 0x36, 0x39, 0x33, 0x66, 0x37, 0x35, 0x34,
	0x36, 0x64, 0x64, 0x32, 0x36, 0x34, 0x32, 0x35, 0x36, 0x39, 0x61, 0x32,
	0x31, 0x32, 0x30, 0x66, 0x33, 0x35, 0x33, 0x36, 0x64, 0x34, 0x35, 0x61,
	0x36, 0x62, 0x35, 0x61, 0x62, 0x22, 0x2c, 0x22, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x22, 0x3a, 0x22, 0x22, 0x2c, 0x22,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x22,
	0x3a, 0x34, 0x32, 0x2c, 0x22, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x22, 0x3a, 0x39, 0x39, 0x2e, 0x39, 0x2c, 0x22, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x65, 0x48, 0x61, 0x73, 0x68, 0x42, 0x6c, 0x61,
	0x6e, 0x6b, 0x22, 0x3a, 0x22, 0x63, 0x6e, 0x38, 0x36, 0x66, 0x62, 0x33,
	0x66, 0x61, 0x30, 0x36, 0x5f, 0x32, 0x34, 0x22, 0x2c, 0x22, 0x6e, 0x61,
	0x6d, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x22, 0x3a, 0x22, 0x63, 0x6e, 0x38, 0x36, 0x66, 0x62,
	0x33, 0x66, 0x61, 0x30, 0x37, 0x5f, 0x32, 0x34, 0x22, 0x2c, 0x22, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x22, 0x3a, 0x22, 0x63, 0x6e, 0x38, 0x36, 0x66,
	0x62, 0x33, 0x66, 0x61, 0x30, 0x38, 0x5f, 0x32, 0x34, 0x22, 0x2c, 0x22,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x22, 0x3a, 0x22, 0x63, 0x6e, 0x38,
	0x36, 0x66, 0x62, 0x33, 0x66, 0x61, 0x30, 0x39, 0x5f, 0x32, 0x22, 0x2c,
	0x22, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x22, 0x3a, 0x22, 0x63, 0x6e, 0x38,
	0x36, 0x66, 0x62, 0x33, 0x66, 0x61, 0x30, 0x31, 0x30, 0x5f, 0x31, 0x34,
	0x22, 0x7d, 0x0}

var bothComp = []byte{0x69, 0x7f, 0x3, 0x1, 0x1, 0x7, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x1, 0xff, 0x80, 0x0, 0x1, 0x7, 0x1, 0x7, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1, 0xc, 0x0, 0x1, 0x6, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x1, 0xc, 0x0, 0x1, 0xa, 0x43, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x1, 0x2, 0x0, 0x1, 0x9, 0x45, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x72, 0x49, 0x44, 0x1, 0xc, 0x0, 0x1, 0x5, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x1, 0xc, 0x0, 0x1, 0x6, 0x43, 0x69, 0x70, 0x68, 0x65,
	0x72, 0x1, 0xa, 0x0, 0x1, 0x7, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64,
	0x1, 0xa, 0x0, 0x0, 0x0, 0xfe, 0x3, 0x5e, 0xff, 0x80, 0x1, 0x5, 0x30, 0x2e,
	0x30, 0x2e, 0x31, 0x1, 0x6, 0x73, 0x70, 0x61, 0x72, 0x73, 0x65, 0x1, 0x1,
	0x1, 0x8, 0x38, 0x36, 0x66, 0x62, 0x33, 0x66, 0x61, 0x30, 0x1, 0xa, 0x63,
	0x6e, 0x38, 0x36, 0x66, 0x62, 0x33, 0x66, 0x61, 0x30, 0x1, 0xfe, 0x1, 0xec,
	0x32, 0x38, 0x62, 0x35, 0x32, 0x66, 0x66, 0x64, 0x34, 0x34, 0x30, 0x30,
	0x64, 0x62, 0x30, 0x30, 0x33, 0x64, 0x30, 0x37, 0x30, 0x30, 0x38, 0x32,
	0x35, 0x31, 0x32, 0x65, 0x31, 0x39, 0x39, 0x30, 0x32, 0x37, 0x37, 0x34,
	0x34, 0x62, 0x32, 0x31, 0x35, 0x34, 0x61, 0x66, 0x32, 0x31, 0x62, 0x37,
	0x61, 0x32, 0x34, 0x38, 0x37, 0x36, 0x64, 0x38, 0x31, 0x64, 0x64, 0x30,
	0x30, 0x66, 0x35, 0x37, 0x35, 0x32, 0x62, 0x38, 0x39, 0x31, 0x65, 0x38,
	0x37, 0x37, 0x37, 0x36, 0x35, 0x37, 0x38, 0x30, 0x30, 0x39, 0x35, 0x61,
	0x35, 0x30, 0x32, 0x64, 0x38, 0x36, 0x39, 0x31, 0x38, 0x31, 0x39, 0x30,
	0x66, 0x61, 0x37, 0x61, 0x32, 0x39, 0x31, 0x36, 0x39, 0x31, 0x34, 0x33,
	0x65, 0x33, 0x38, 0x36, 0x30, 0x38, 0x65, 0x35, 0x39, 0x62, 0x32, 0x39,
	0x61, 0x62, 0x36, 0x63, 0x65, 0x66, 0x38, 0x62, 0x63, 0x37, 0x62, 0x62,
	0x66, 0x34, 0x66, 0x32, 0x30, 0x62, 0x62, 0x62, 0x62, 0x63, 0x61, 0x64,
	0x62, 0x30, 0x62, 0x36, 0x65, 0x38, 0x38, 0x63, 0x31, 0x64, 0x61, 0x36,
	0x39, 0x37, 0x64, 0x32, 0x32, 0x61, 0x39, 0x61, 0x32, 0x61, 0x62, 0x32,
	0x64, 0x39, 0x63, 0x39, 0x36, 0x37, 0x34, 0x64, 0x63, 0x62, 0x39, 0x63,
	0x65, 0x65, 0x37, 0x32, 0x66, 0x61, 0x63, 0x61, 0x30, 0x37, 0x35, 0x37,
	0x65, 0x39, 0x33, 0x38, 0x61, 0x39, 0x35, 0x37, 0x36, 0x37, 0x63, 0x35,
	0x32, 0x33, 0x37, 0x64, 0x39, 0x38, 0x35, 0x66, 0x65, 0x64, 0x64, 0x32,
	0x34, 0x61, 0x32, 0x65, 0x35, 0x36, 0x32, 0x31, 0x39, 0x36, 0x34, 0x62,
	0x39, 0x36, 0x39, 0x36, 0x63, 0x63, 0x36, 0x35, 0x33, 0x36, 0x31, 0x62,
	0x35, 0x31, 0x65, 0x64, 0x39, 0x35, 0x35, 0x61, 0x32, 0x66, 0x62, 0x33,
	0x62, 0x63, 0x39, 0x32, 0x65, 0x32, 0x32, 0x37, 0x61, 0x37, 0x64, 0x33,
	0x34, 0x62, 0x39, 0x61, 0x37, 0x33, 0x32, 0x61, 0x38, 0x64, 0x34, 0x37,
	0x62, 0x34, 0x64, 0x63, 0x39, 0x37, 0x65, 0x36, 0x33, 0x39, 0x65, 0x35,
	0x64, 0x63, 0x38, 0x34, 0x38, 0x66, 0x33, 0x64, 0x33, 0x37, 0x61, 0x39,
	0x63, 0x30, 0x61, 0x62, 0x31, 0x35, 0x34, 0x38, 0x61, 0x30, 0x31, 0x36,
	0x35, 0x34, 0x38, 0x62, 0x36, 0x31, 0x36, 0x34, 0x62, 0x38, 0x62, 0x32,
	0x36, 0x32, 0x39, 0x34, 0x63, 0x31, 0x38, 0x61, 0x33, 0x66, 0x63, 0x31,
	0x32, 0x32, 0x36, 0x61, 0x30, 0x30, 0x62, 0x31, 0x30, 0x37, 0x32, 0x36,
	0x38, 0x30, 0x66, 0x31, 0x30, 0x35, 0x30, 0x37, 0x66, 0x64, 0x38, 0x39,
	0x30, 0x30, 0x38, 0x33, 0x63, 0x33, 0x63, 0x31, 0x39, 0x65, 0x66, 0x37,
	0x35, 0x31, 0x30, 0x63, 0x32, 0x62, 0x30, 0x33, 0x32, 0x31, 0x37, 0x62,
	0x30, 0x61, 0x31, 0x66, 0x33, 0x34, 0x38, 0x38, 0x31, 0x65, 0x30, 0x38,
	0x30, 0x31, 0x31, 0x30, 0x30, 0x30, 0x33, 0x64, 0x63, 0x62, 0x31, 0x33,
	0x30, 0x30, 0x31, 0x63, 0x30, 0x36, 0x31, 0x63, 0x30, 0x32, 0x63, 0x30,
	0x36, 0x31, 0x62, 0x63, 0x33, 0x38, 0x65, 0x34, 0x33, 0x38, 0x64, 0x38,
	0x33, 0x31, 0x30, 0x30, 0x33, 0x33, 0x38, 0x38, 0x39, 0x63, 0x31, 0x63,
	0x62, 0x32, 0x65, 0x31, 0x65, 0x63, 0x63, 0x32, 0x30, 0x37, 0x63, 0x30,
	0x37, 0x30, 0x30, 0x31, 0x35, 0x35, 0x38, 0x30, 0x62, 0x31, 0x61, 0x31,
	0x65, 0x38, 0x32, 0x62, 0x30, 0x61, 0x38, 0x62, 0x31, 0x35, 0x34, 0x33,
	0x33, 0x64, 0x30, 0x31, 0x63, 0x34, 0x62, 0x34, 0x37, 0x35, 0x64, 0x37,
	0x1, 0xfe, 0x1, 0x40, 0x28, 0xb5, 0x2f, 0xfd, 0x44, 0x0, 0xc3, 0x1, 0x8d,
	0x9, 0x0, 0x2, 0x11, 0x31, 0x1d, 0x60, 0x49, 0xeb, 0xb3, 0x15, 0xd, 0xc5,
	0x55, 0x3f, 0xfa, 0xcd, 0x25, 0xb4, 0xe2, 0x60, 0xc1, 0x50, 0x89, 0x4f,
	0xb5, 0x15, 0x21, 0xe6, 0x66, 0x3b, 0x71, 0x18, 0x6, 0xe3, 0xb, 0xa8, 0x90,
	0x71, 0x10, 0x2b, 0xd6, 0x36, 0x6b, 0x2f, 0xab, 0x7a, 0x9b, 0x34, 0xfd,
	0x49, 0x94, 0xcc, 0x56, 0x53, 0x6d, 0xbe, 0xb7, 0x4a, 0xd7, 0x27, 0xb6,
	0xdf, 0xdf, 0x9c, 0xbe, 0xb3, 0x77, 0xd3, 0x29, 0x7f, 0x7a, 0xcb, 0x15,
	0xef, 0x94, 0xfd, 0x1d, 0xa, 0x1f, 0x86, 0x41, 0x7d, 0xbf, 0xce, 0xab, 0x2b,
	0x3a, 0x9f, 0x8a, 0x76, 0xec, 0x14, 0x6a, 0xb1, 0xc7, 0x50, 0x4a, 0xce,
	0x7b, 0xb5, 0x73, 0x7a, 0x9e, 0x5b, 0x9d, 0x10, 0x42, 0xeb, 0x99, 0x9a,
	0xe7, 0xbd, 0x77, 0x91, 0x5b, 0xfa, 0x7a, 0xbc, 0xad, 0x26, 0x1f, 0xca,
	0xa1, 0x30, 0x1, 0x1a, 0x54, 0xc8, 0x50, 0x4c, 0x43, 0xa5, 0x54, 0xc, 0x84,
	0x2a, 0x8d, 0x73, 0xf8, 0x53, 0xff, 0x16, 0x89, 0x73, 0xc4, 0xe2, 0xbc, 0x0,
	0xd, 0xb, 0x60, 0xac, 0x61, 0x82, 0xd, 0x90, 0x47, 0x93, 0xaa, 0x21, 0xc2,
	0xfb, 0xb0, 0x24, 0x68, 0x10, 0x1b, 0x26, 0x24, 0xe, 0xe, 0xde, 0xf0, 0xf9,
	0x81, 0x13, 0x43, 0xc2, 0x48, 0x63, 0x43, 0x43, 0xc2, 0x88, 0x0, 0x1a, 0xf4,
	0x5, 0x61, 0x4, 0x80, 0x87, 0xd, 0x13, 0xc8, 0xc2, 0xef, 0x3, 0xa8, 0x10,
	0x2b, 0x0, 0x47, 0x3d, 0xa8, 0x5c, 0xf3, 0x25, 0xf5, 0x2, 0x72, 0x1d, 0x0,
	0xc3, 0x81, 0x17, 0x8b, 0x8b, 0x3, 0x18, 0x87, 0x74, 0xc7, 0xcd, 0x10, 0x0,
	0xfe, 0xc, 0x77, 0x8b, 0xb4, 0x71, 0x30, 0xba, 0x38, 0xcc, 0x64, 0xf0, 0xa4,
	0x5, 0x68, 0x32, 0x64, 0xd2, 0x2, 0x90, 0x1, 0x80, 0xd8, 0x62, 0xb4, 0xd8,
	0x2f, 0x59, 0xda, 0x11, 0x41, 0x86, 0x70, 0xa1, 0x34, 0xc0, 0x8c, 0x4b,
	0x44, 0x29, 0x70, 0xc, 0x6, 0x30, 0x1c, 0xd0, 0x38, 0x18, 0x1, 0x60, 0xb8,
	0xa1, 0x17, 0x92, 0x38, 0xec, 0x43, 0xb, 0x80, 0x4f, 0xe8, 0xe, 0x3d, 0x10,
	0x80, 0x28, 0xa9, 0x9a, 0xc3, 0x56, 0x50, 0xd6, 0xca, 0xd8, 0x72, 0x96,
	0xa6, 0x43, 0xf9, 0x2, 0x4d, 0x8, 0x16, 0x78, 0x0}
